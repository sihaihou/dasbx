<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reyco.dasbx.user.core.dao.sys.SysAccountDao">

    <select id="getByUsername" resultType="com.reyco.dasbx.model.domain.SysAccount">
        select * from sys_account where username = #{username}
    </select>
    
    <select id="getById" resultType="com.reyco.dasbx.model.domain.SysAccount">
        select * from sys_account where id = #{id}
    </select>
    
    <select id="getByUid" resultType="com.reyco.dasbx.model.domain.SysAccount">
        select * from sys_account where uid = #{uid}
    </select>
    
     <select id="getByEmail" resultType="com.reyco.dasbx.model.domain.SysAccount">
        select * from sys_account where email = #{email}
    </select>
    

	 <!-- 查询用于去重 -->
    <select id="getCountByNameAndById" resultType="int">
        select count(*) from sys_account
        <trim prefix="where" prefixOverrides="and|or">
            username=#{username}
            <if test="id != null ">
                and id != #{id}
            </if>
            and deleted=0
        </trim>
    </select>
	
	<select id="getMaxId" resultType="long">
        select max(id) from sys_account
    </select>
	
    <select id="getAll" resultType="com.reyco.dasbx.model.domain.SysAccount">
        select * from sys_account where deleted=0 and id>1
    </select>
    
    <select id="getListByLimit" resultType="com.reyco.dasbx.model.domain.SysAccount">
        select * from sys_account where deleted=0 and id<![CDATA[>=]]>#{startId} and id<![CDATA[<]]>#{endId}
    </select>
	
	<select id="list" resultType="com.reyco.dasbx.model.domain.SysAccount">
		select * from sys_account
		<where>
			deleted=0
			and id>1
			<if test="username!=null and username!=''">
				and username like #{username}"%"
			</if>
		</where> 
	</select>

	<!-- 新增 -->
	<insert id="insert">
		insert into sys_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="nickname != null and nickname != ''">
				nickname,
			</if>
			<if test="type!=null">
				type,
			</if>
			<if test="gender!=null">
				gender,
			</if>
			<if test="birthday!=null">
				birthday,
			</if>
			<if test="phone!=null and phone!=''">
				phone,
			</if>
			<if test="email!=null and email!=''">
				email,
			</if>
			<if test="address!=null and address!=''">
				address,
			</if>
			<if test="remark != null and remark != ''">
				remark,
			</if>
			`uid`,`username`,`password`,`salt`,`createBy`,`modifiedBy`,`gmtCreate`,`gmtModified`
		</trim>
		<trim prefix="values(" suffix=")">
			<if test="nickname!=null and nickname!=''">
				#{nickname},
			</if>
			<if test="type!=null">
				#{type},
			</if>
			<if test="gender!=null">
				#{gender},
			</if>
			<if test="birthday!=null">
				#{birthday},
			</if>
			<if test="phone!=null and phone!=''">
				#{phone},
			</if>
			<if test="email!=null and email!=''">
				#{email},
			</if>
			<if test="address!=null and address!=''">
				#{address},
			</if>
			<if test="remark != null and remark != ''">
				#{remark},
			</if>
			#{uid},#{username},#{password},#{salt},#{createBy},#{modifiedBy},now(),now()
		</trim>
		<selectKey resultType="long" keyProperty="id" order="AFTER">
            select @@identity
        </selectKey>
	</insert>
	
	<!-- 修改 -->
	<update id="update">
		update sys_account
		<set>
			<if test="developerId != null and developerId != ''">
				`developerId`=#{developerId},
			</if>
			<if test="username != null and username != ''">
				`username`=#{username},
			</if>
			<if test="nickname != null and nickname != ''">
				`nickname`=#{nickname},
			</if>
			<if test="password != null and password != ''">
				`password`=#{password},
			</if>
			<if test="integral != null">
				`integral`=#{integral},
			</if>
			<if test="gender != null">
				`gender`=#{gender},
			</if>
			<if test="birthday != null and birthday != ''">
				`birthday`=#{birthday},
			</if>
			<if test="phone != null and phone != ''">
				`phone`=#{phone},
			</if>
			<if test="email != null and email != ''">
				`email`=#{email},
			</if>
			<if test="address != null and address != ''">
				`address`=#{address},
			</if>
			<if test="remark != null and remark != ''">
				`remark`=#{remark},
			</if>
			gmtModified=#{gmtModified},modifiedBy=#{modifiedBy}
		</set>
		where uid=#{uid}
	</update>
	
	<update id="bindDeveloper">
		update sys_account 
		set `developerId`=#{developerId},gmtModified=now(),modifiedBy=#{modifiedBy} 
		where uid = #{uid}
	</update>
	
	<!-- 禁用启用 -->
	<update id="updateState">
		update sys_account set state=#{state},gmtModified=now(),modifiedBy=#{modifiedBy} where id=#{id}
	</update>
	
	<!-- 删除-->
	<update id="deleteById">
		update sys_account set deleted=#{deleted},gmtModified=now(),modifiedBy=#{modifiedBy} where id=#{id}
	</update>
</mapper>